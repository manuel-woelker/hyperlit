name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.86.0
      - name: Cargo version
        run: cargo --version
      - name: Build
        run: cargo build
      - name: Run hyperlit on itself
        run: cargo run --package hyperlit
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: output/
  test:
    runs-on: ubuntu-24.04
    env:
      CARGO_INCREMENTAL: '0'
      RUSTFLAGS: "-Cinstrument-coverage"
      RUSTDOCFLAGS: "-Cinstrument-coverage"
      LLVM_PROFILE_FILE: "test-%p-%m.profraw"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # need full clone for unit test in git_info.rs to get the correct last modification date
      - uses: dtolnay/rust-toolchain@1.86.0
        with:
          components: llvm-tools-preview
      - name: Run tests
        run: cargo test --all-features
      - name: rust-grcov
        # You may pin to the exact commit or the version.
        # uses: actions-rs/grcov@bb47b1ed7883a1502fa6875d562727ace2511248
        uses: actions-rs/grcov@v0.1
      - name: Codecov
        # You may pin to the exact commit or the version.
        # uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          # Repository upload token - get it from codecov.io. Required only for private repositories
          # token: # optional
          # Specify whether the Codecov output should be verbose
          verbose: true
          fail_ci_if_error: true
  format:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.86.0
        with:
          components: rustfmt
      - name: rustfmt version
        run: cargo fmt --version
      - name: Check formatting
        run: cargo fmt --check
  clippy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.86.0
        with:
          components: clippy
      - name: clippy version
        run: cargo clippy --version
      - name: Check clippy
        run: cargo clippy --all -- -D warnings

  deploy-pages:
    if: github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-24.04
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4